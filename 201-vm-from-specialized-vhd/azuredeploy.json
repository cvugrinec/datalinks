{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"osDiskVhdUri": {
			"type": "string",
			"metadata": {
				"description": "Uri of the existing VHD"
			}
		},
		"osType": {
			"type": "string",
			"allowedValues": [
				"Windows",
				"Linux"
			],
			"metadata": {
				"description": "Type of OS on the existing vhd"
			}
		},
		"vmSize": {
			"type": "string",
			"defaultValue": "Standard_DS1_v2",
			"metadata": {
				"description": "Size of the VM"
			}
		},
		"vmName": {
			"type": "string",
			"metadata": {
				"description": "Name of the VM"
			}
		}
	},
	"variables": {
		"api-version": "2015-06-15",
		"addressPrefix": "10.0.0.0/16",
		"subnetName": "Subnet",
		"subnetPrefix": "10.0.0.0/24",
		"publicIPAddressType": "Dynamic",
		"virtualNetworkName": "chrisvnetwork",
		"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
		"subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
		"nicName": "[concat(parameters('vmName'),'-',resourceGroup().location)]",
		"publicIpAddressName": "[concat(parameters('vmName'),'-nic')]"
	},
	"resources": [{
			"apiVersion": "[variables('api-version')]",
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[variables('virtualNetworkName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('addressPrefix')]"
					]
				},
				"subnets": [{
					"name": "[variables('subnetName')]",
					"properties": {
						"addressPrefix": "[variables('subnetPrefix')]"
					}
				}]
			}
		}, {
			"apiVersion": "[variables('api-version')]",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[variables('nicName')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]",
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
			],
			"properties": {
				"ipConfigurations": [{
					"name": "ipconfig2",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"publicIPAddress": {
							"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpAddressName'))]"
						},
						"subnet": {
							"id": "[variables('subnetRef')]"
						}
					}
				}]
			}
		}, {
			"apiVersion": "[variables('api-version')]",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIpAddressName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"publicIPAllocationMethod": "[variables('publicIPAddressType')]"
			}
		}, {
			"apiVersion": "[variables('api-version')]",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[parameters('vmName')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
			        "storageProfile": {
          				"osDisk": {
            					"name": "[concat(parameters('vmName'),'-osDisk')]",
            					"osType": "[parameters('osType')]",
            					"caching": "ReadWrite",
            					"vhd": {
              						"uri": "[parameters('osDiskVhdUri')]"
            					},
            					"createOption": "Attach"
          				}
				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
					}]
				}
			}
		},
              {
                  "type": "extensions",
                  "name": "CustomScriptExtension",
                  "apiVersion": "2015-05-01-preview",
                  "location": "[resourceGroup().location]",
                  "dependsOn": [
                      "[parameters('vmName')]"
                  ],
                  "properties": {
                      "publisher": "Microsoft.Compute",
                      "type": "CustomScriptExtension",
                      "typeHandlerVersion": "1.8",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                      "fileUris": [
                          "[concat(parameters('_artifactsLocation'), '/', variables('ScriptFolder'), '/', variables('ScriptFileName'), parameters('_artifactsLocationSasToken'))]"
                        ],
                      "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('ScriptFolder'), '/', variables('ScriptFileName'))]"
                        }
                    }
               }
	]
}
